services:

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis_data:/data

  mysql_write:
    image: mysql:8.0
    container_name: mysql-write
    environment:
      MYSQL_ROOT_PASSWORD: mysql-write
      MYSQL_DATABASE: app
      MYSQL_USER: app-user
      MYSQL_PASSWORD: app-bank
    command:
      [
        "mysqld",
        "--default-authentication-plugin=mysql_native_password",
        "--server-id=1",
        "--log-bin=mysql-bin",
        "--binlog_format=ROW",
        "--binlog_row_image=FULL",
        "--binlog_expire_logs_seconds=864000",
        "--gtid-mode=ON",
        "--enforce-gtid-consistency=ON"
      ]
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -pmysql-write || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - mysql_write_data:/var/lib/mysql
      - ./init/mysql/write:/docker-entrypoint-initdb.d:ro

  mysql_read:
    image: mysql:8.0
    container_name: mysql-read
    environment:
      MYSQL_ROOT_PASSWORD: mysql-read
      MYSQL_DATABASE: app
    command:
      [
        "mysqld",
        "--default-authentication-plugin=mysql_native_password",
        "--server-id=2",
        "--log-bin=mysql-bin",
        "--log-replica-updates=ON",
        "--relay_log=relay-bin",
        "--gtid-mode=ON",
        "--enforce-gtid-consistency=ON"
      ]
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -pmysql-read || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - mysql_read_data:/var/lib/mysql
      - ./init/mysql/read:/docker-entrypoint-initdb.d:ro

  replica_config:
    image: mysql:8.0
    container_name: mysql-replica-config
    depends_on:
      mysql_write:
        condition: service_healthy
      mysql_read:
        condition: service_healthy
    entrypoint: [ "sh", "-c" ]
    command: >
      "
      echo '>> Aguardando MySQLs ficarem prontos...';
      for i in 1 2 3 4 5 6 7 8 9 10; do
        mysqladmin ping -hmysql-write -uroot -pmysql-write && mysqladmin ping -hmysql-read -uroot -pmysql-read && break || sleep 2;
      done;
      echo '>> Configurando CHANGE REPLICATION SOURCE TO (GTID)...';
      mysql -hmysql-read -uroot -pmysql-read -e \"
        STOP REPLICA;
        CHANGE REPLICATION SOURCE TO
          SOURCE_HOST='mysql-write',
          SOURCE_PORT=3306,
          SOURCE_USER='repl',
          SOURCE_PASSWORD='repl-pass',
          GET_SOURCE_PUBLIC_KEY=1,
          SOURCE_AUTO_POSITION=1;
        START REPLICA;
      \";
      echo '>> Status da rÃ©plica:';
      mysql -hmysql-read -uroot -pmysql-read -e 'SHOW REPLICA STATUS\\G';
      echo '>> Finalizado.';
      "
  app:
    # Rode com minha imagem do docker hub(https://hub.docker.com/r/darlankenobi/miniautorizador)
    image: darlankenobi/bankapp:1.0.1

    # Rode apontando para dockerfile
#    build:
#      context: ..
#      dockerfile: Dockerfile

    container_name: bankapp
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - WRITE_DB_HOST=mysql_write
      - WRITE_DB_PORT=3306
      - WRITE_DB_USER=app-user
      - WRITE_DB_PASSWORD=app-bank
      - READ_DB_HOST=mysql_read
      - READ_DB_PORT=3306
      - READ_DB_USER=app-user
      - READ_DB_PASSWORD=app-bank
      - REDIS_DB_HOST=redis
      - JWT_SECRET=MD+Pr6fgCeLJ3eS4SDM7oQf5DetV7Y7FIhPjEsaqFSM=
    depends_on:
      mysql_read:
        condition: service_healthy
      mysql_write:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  mysql_write_data:
    driver: local
  mysql_read_data:
    driver: local
  redis_data:
    driver: local
